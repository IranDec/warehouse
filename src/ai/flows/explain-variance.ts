// This file is generated by Firebase Studio.
'use server';

/**
 * @fileOverview Explains inventory variances using an LLM.
 *
 * - explainInventoryVariance - A function that explains inventory variances.
 * - ExplainInventoryVarianceInput - The input type for the explainInventoryVariance function.
 * - ExplainInventoryVarianceOutput - The return type for the explainInventoryVariance function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ExplainInventoryVarianceInputSchema = z.object({
  expectedQuantity: z.number().describe('The expected quantity of the item.'),
  actualQuantity: z.number().describe('The actual quantity of the item.'),
  itemName: z.string().describe('The name of the item.'),
  date: z.string().describe('The date of the variance (ISO format).'),
  recentTransactions: z.string().describe('A list of recent transactions related to the item.'),
});
export type ExplainInventoryVarianceInput = z.infer<typeof ExplainInventoryVarianceInputSchema>;

const ExplainInventoryVarianceOutputSchema = z.object({
  explanation: z.string().describe('A human-readable explanation of the variance.'),
});
export type ExplainInventoryVarianceOutput = z.infer<typeof ExplainInventoryVarianceOutputSchema>;

export async function explainInventoryVariance(input: ExplainInventoryVarianceInput): Promise<ExplainInventoryVarianceOutput> {
  return explainInventoryVarianceFlow(input);
}

const prompt = ai.definePrompt({
  name: 'explainInventoryVariancePrompt',
  input: {schema: ExplainInventoryVarianceInputSchema},
  output: {schema: ExplainInventoryVarianceOutputSchema},
  prompt: `You are an expert warehouse manager. Your goal is to explain inventory variances.

  Here's the situation:
  * Item: {{itemName}}
  * Date: {{date}}
  * Expected Quantity: {{expectedQuantity}}
  * Actual Quantity: {{actualQuantity}}
  * Recent Transactions: {{recentTransactions}}

  Explain the possible reasons for the variance between the expected and actual quantities. Be concise and specific.
  What is the most likely cause?
  `,
});

const explainInventoryVarianceFlow = ai.defineFlow(
  {
    name: 'explainInventoryVarianceFlow',
    inputSchema: ExplainInventoryVarianceInputSchema,
    outputSchema: ExplainInventoryVarianceOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
